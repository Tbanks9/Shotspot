{"version":3,"sources":["components/common/Home.js","components/cities/CityIndex.js","lib/auth.js","lib/headers.js","components/users/UserProfile.js","components/users/UserForm.js","components/users/UserEdit.js","components/common/Navbar.js","components/common/FailedPage.js","components/auth/Login.js","components/auth/Register.js","components/common/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","React","Component","CityIndex","state","cities","cityFilter","chosenCity","options","value","label","handleChange","e","setState","console","log","filterCities","filter","city","city_name","axios","get","res","this","data","getData","onChange","map","photographyspots","spot","location_name","src","location_image","alt","location_description","Auth","token","localStorage","setItem","getItem","removeItem","getToken","parts","split","length","JSON","parse","atob","payload","getPayload","Math","round","Date","now","exp","sub","headers","common","Cookies","UserProfile","target","name","user","handleDelete","a","userId","props","match","params","id","delete","history","push","response","currentUser","getUser","username","to","type","UserForm","handleSubmit","errors","onSubmit","first_name","placeholder","second_name","email","onClick","UserEdit","preventDefault","put","setToken","Navbar","navbarOpen","searchResult","handleClick","innerHTML","handleLogout","logout","prevProps","location","pathname","isAuthenticated","href","withRouter","FailedPage","Login","password","error","post","Register","SecureRoute","component","rest","App","exact","path","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.0f48f497.chunk.js","sourcesContent":["import React from 'react'\n// import { Link } from 'react-router-dom'\n\nclass Home extends React.Component {\n\n  render() {\n    return (\n      <>\n        <div className=\"hero-body\">\n          <div className=\"home-title\">\n            <h1>Shotspot.</h1>\n            </div>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default Home","import React from 'react'\nimport axios from 'axios'\nimport Select from 'react-select'\n// import { Link } from 'react-router-dom'\n// import Auth from '../../lib/auth'\n\nclass CityIndex extends React.Component {\n  state = {\n    cities: null,\n    cityFilter: '',\n    chosenCity: 'ALL',\n  }\n\n  options = [\n    { value: 'Bangkok', label: 'Bangkok' },\n    { value: 'Hong Kong', label: 'Hong Kong' },\n    { value: 'London', label: 'London' },\n    { value: 'Sydney', label: 'Sydney' },\n    { value: 'Reykjavik', label: 'Reykjavik' },\n    { value: 'Lima', label: 'Lima' }\n  ]\n\n  async getData() {\n    try {\n      const res = await axios.get('/api/cities')\n      this.setState({ cities: res.data })\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  componentDidMount() {\n    this.getData()\n  }\n\n  handleChange = (e) => {\n    this.setState({ chosenCity: e.value })\n    console.log(this.state.chosenCity)\n  }\n\n  filterCities = () => {\n    return this.state.cities.filter(city => {\n      return city.city_name === this.state.chosenCity ||\n        this.state.chosenCity === 'ALL'\n    })\n  }\n\n  render() {\n    if (!this.state.cities) return null\n    console.log(this.state.cities)\n    return (\n      <>\n        <section className=\"hero-body-index\">\n          <div className=\"fieldContainer\">\n            <h1 className=\"cityTitle\">Pick your city</h1>\n            <div className=\"control\">\n              <Select\n                options={this.options}\n                onChange={this.handleChange}\n                className=\"selectBar\"\n              />\n              <h2 className=\"header\">City selected: <span>{this.state.chosenCity}</span></h2>\n              {/* <h1>{this.filterCities().city_name}</h1>\n              <hr />\n              <h2>{this.filterCities().city_description}</h2> */}\n              {this.filterCities().map(city =>\n                city.photographyspots.map(spot =>\n                  <div className=\"photograpySpot\">\n                    <br />\n                    <h1 className=\"photoSpotTitle\">{spot.location_name}</h1>\n                    <br />\n                    <img src={spot.location_image} className=\"image\" alt={spot.location_name} />\n                    <br />\n                    <h2 className=\"description\">{spot.location_description}</h2>\n                    <br />\n                  </div>\n                ))}\n            </div>\n          </div>\n        </section>\n      </>\n    )\n  }\n}\n\nexport default CityIndex","// Not a React component, so first character in auth is lowercase\nclass Auth {\n  static setToken(token) {\n    localStorage.setItem('token', token)\n  }\n\n  static getToken() {\n    return localStorage.getItem('token')\n  }\n\n  static logout() {\n    localStorage.removeItem('token')\n  }\n\n  static getPayload() {\n    const token = this.getToken() // try and get the token\n    if (!token) return false // if its not there, return false\n    const parts = token.split('.') // split it into an array\n    if (parts.length < 3) return false // if there are less than three parts the token will be invalid, return false\n    return JSON.parse(atob(parts[1]))\n  }\n\n  static isAuthenticated() {\n    const payload = this.getPayload()\n    if (!payload) return false\n    const now = Math.round(Date.now() / 1000)\n    return now < payload.exp\n  }\n\n  static getUser() {\n    const { sub } = this.getPayload()\n    // console.log('full payload', this.getPayload())\n    // console.log('just sub', sub)\n    return sub\n  }\n  \n}\n\nexport default Auth","import Cookies from 'js-cookie'\nconst csrftoken = Cookies.get('csrftoken')\n\nexport const headers = {\n  common: {\n    'X-CSRF-TOKEN': csrftoken\n  },\n  // later on you can include this (remember to import it):\n  // headers: { Authorization: `Bearer ${getToken()}` }\n}","import React from 'react'\nimport axios from 'axios'\nimport Auth from '../../lib/auth'\nimport { headers } from '../../lib/headers'\nimport { Link } from 'react-router-dom'\n\nclass UserProfile extends React.Component {\n  state = {\n    data: {},\n  }\n\n  async getData() {\n    const currentUser = Auth.getUser()\n    try {\n      const res = await axios.get(`/api/users/${currentUser}`, this.state.data, headers)\n      console.log(res.data)\n      this.setState({ data: res.data })\n      console.log(currentUser)\n    } catch (err) {\n      this.props.history.push('/notfound')\n    }\n  }\n\n  componentDidMount() {\n    this.getData()\n  }\n\n  handleChange = ({ target: { name, value } }) => {\n    const user = { ...this.state.user, [name]: value }\n    this.setState({ user })\n  }\n\n  handleDelete = async () => {\n    const userId = this.props.match.params.id\n    try {\n      await axios.delete(`/api/users/${userId}`, this.state.data, headers)\n      this.props.history.push('/')\n    } catch (err) {\n      console.log(err.response)\n    }\n  }\n\n  render() {\n    if (!this.state.data.cities) return null\n    return (\n      <section className=\"user-body-index\">\n        <div className=\"userContainer\">\n          <h2 className=\"username\">Hey, {this.state.data.username}! 👋 </h2>\n          <h3 className=\"username\">So far you've visited..</h3>\n          {this.state.data.cities.map(city =>\n            <div className=\"userCities\">\n              <br />\n              <h1 className=\"photoSpotTitle\">{city.city_name}</h1>\n              <br />\n            </div>\n          )}\n          <div className=\"buttonContainer\">\n            <Link to={`/profile/${this.state.data.id}/edit`} type=\"submit\" className=\"loginButton\">\n              Edit Profile\n            </Link>\n          </div>\n        </div>\n      </section>\n    )\n  }\n}\n\nexport default UserProfile","import React from 'react'\n\nconst UserForm = ({ data, handleChange, handleDelete, handleSubmit, errors }) => {\n\n  return (\n    <section className=\"hero-body-index\">\n      <form onSubmit={handleSubmit} className=\"user-container\">\n        <div className=\"registerForm\">\n          <div className=\"fieldContainer\">\n            <h2 className=\"title\">Edit profile</h2>\n            <div className=\"field\">\n              <label className=\"registerLabel\">First name</label>\n              <div className=\"control\">\n                <input\n                  className={`input ${errors.first_name ? 'is-danger' : ''}`}\n                  placeholder=\"Enter your surname\"\n                  id=\"first_name\"\n                  name=\"first_name\"\n                  onChange={handleChange}\n                  value={data.first_name}\n                />\n              </div>\n              {errors.name && <small className=\"help is-danger\">{errors.first_name}</small>}\n            </div>\n            <div className=\"field\">\n              <label className=\"registerLabel\">Second name</label>\n              <div className=\"control\">\n                <input\n                  className={`input ${errors.second_name ? 'is-danger' : ''}`}\n                  placeholder=\"Enter your surname\"\n                  id=\"second_name\"\n                  name=\"second_name\"\n                  onChange={handleChange}\n                  value={data.second_name}\n                />\n              </div>\n              {/* {errors.name && <small className=\"help is-danger\">{errors.first_name}</small>} */}\n            </div>\n            <div className=\"field\">\n              <label className=\"registerLabel\">Username</label>\n              <div className=\"control\">\n                <input\n                  className={`input ${errors.username ? 'is-danger' : ''}`}\n                  placeholder=\"Enter your username\"\n                  id=\"username\"\n                  name=\"username\"\n                  onChange={handleChange}\n                  value={data.username}\n                />\n              </div>\n              {/* {this.state.errors.name && <small className=\"help is-danger\">{this.state.errors}</small>} */}\n            </div>\n            <div className=\"field\">\n              <label className=\"registerLabel\">Email</label>\n              <div className=\"control\">\n                <input\n                  className={`input ${errors.email ? 'is-danger' : ''}`}\n                  placeholder=\"Email\"\n                  name=\"email\"\n                  onChange={handleChange}\n                  value={data.email}\n                />\n              </div>\n              {/* {errors.email && <small className=\"help is-danger\">{errors.email}</small>} */}\n            </div>\n            {/* <div className=\"field\">\n              <label className=\"label\">PASSWORD</label>\n              <div className=\"control\">\n                <input\n                  className={`input is-rounded ${errors.password ? 'is-danger' : ''}`}\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  onChange={handleChange}\n                />\n              </div>\n              {/* {errors.password && <small className=\"help is-danger\">{errors.password}</small>} */}\n            {/* </div>\n            <div className=\"field\">\n              <label className=\"label\">Password confirmation</label>\n              <div className=\"control\">\n                <input\n                  className={`input is-rounded ${errors.password_confirmation ? 'is-danger' : ''}`}\n                  type=\"password\"\n                  placeholder=\"Password Confirmation\"\n                  id=\"password_confirmation\"\n                  name=\"password_confirmation\"\n                  onChange={handleChange}\n                />\n              </div> */}\n              {/* {errors.password_confirmation && <small className=\"help is-danger\">{errors.password_confirmation}</small>} */}\n            {/* </div>  */}\n          </div>\n          <div className=\"buttons\">\n            <button type=\"submit\" className=\"editButton1\">Save</button>\n            <br />\n            <button onClick={handleDelete} className=\"editButton2\">Delete</button>\n          </div>\n        </div>\n      </form>\n    </section>\n  )\n}\n\nexport default UserForm","import React from 'react'\nimport axios from 'axios'\nimport Auth from '../../lib/auth'\nimport UserForm from './UserForm'\nimport { headers } from '../../lib/headers'\n\n\nclass UserEdit extends React.Component {\n  state = {\n    data: {\n      first_name: '',\n      second_name: '',\n      username: '',\n      email: ''\n      // cities: []\n    },\n    errors: {}\n  }\n\n  async componentDidMount() {\n    const userId = this.props.match.params.id\n    console.log(this.props.match.params.id)\n    try {\n      const res = await axios.get(`/api/users/${userId}`, this.state.data, headers)\n      this.setState({ data: res.data })\n    } catch (err) {\n      console.log('something is wrong', err)\n    }\n  }\n\n  handleChange = ({ target: { name, value } }) => {\n    const data = { ...this.state.data, [name]: value }\n    this.setState({ data })\n  }\n\n  handleSubmit = async e => {\n    e.preventDefault()\n    console.log(this.props.match.params.id)\n    const userId = this.props.match.params.id\n    try {\n      const res = await axios.put(`/api/users/${userId}`, this.state.data, headers)\n      Auth.setToken(res.data.token)\n      this.props.history.push('/')\n    } catch (err) {\n      this.setState(err.response.data.errors)\n    }\n  }\n\n    handleDelete = async () => {\n      const userId = this.props.match.params.id\n      try {\n        await axios.delete(`/api/users/${userId}`, this.state.data, headers)\n        this.props.history.push('/')\n      } catch (err) {\n        console.log(err.response)\n      }\n    }\n\n  render() {\n    if (!this.state.data.first_name) return null\n    return (\n      <UserForm\n        data={this.state.data}\n        handleChange={this.handleChange}\n        handleSubmit={this.handleSubmit}\n        handleDelete={this.handleDelete}\n        errors={this.state.errors}\n      />\n    )\n  }\n}\n\nexport default UserEdit","import React from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport Auth from '../../lib/auth'\n\n\nclass Navbar extends React.Component {\n  state = {\n    navbarOpen: false,\n    searchResult: null\n  }\n\n  handleClick = (e) => {\n    localStorage.setItem('skill', e.target.innerHTML)\n  }\n\n  handleLogout = () => {\n    Auth.logout()\n    this.props.history.push('/')\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      this.setState({ navbarOpen: false })\n    }\n  }\n\n  render() {\n    return (\n      <nav className=\"navbar nav is-transparent is-fixed-top\">\n        <div className=\"container\">\n          <Link className=\"navbar-item\" to=\"/\">Home</Link>\n          {/* <Link className=\"navbar-item\" to=\"/map/london\">Map</Link> */}\n          <Link className=\"navbar-item\" to=\"/cities\">Cities</Link>\n          <div className=\"navbar-end\">\n            {!Auth.isAuthenticated() && <Link className=\"navbar-item\" to=\"/register\">Register</Link>}\n            {!Auth.isAuthenticated() && <Link className=\"navbar-item\" to=\"/login\">Login</Link>}\n            {/* {Auth.isAuthenticated() && <Link className=\"navbar-item has-text-white\" to=\"/messages\">Inbox</Link>} */}\n            {Auth.isAuthenticated() && <Link className=\"navbar-item\" to=\"/profile\">Profile</Link>}\n            {Auth.isAuthenticated() && <a href className=\"navbar-item\" onClick={this.handleLogout}>Logout</a>}\n          </div>\n        </div>\n      </nav>\n    )\n  }\n}\n\nexport default withRouter(Navbar)","import React from 'react'\n\nconst FailedPage = () => (\n  <section className=\"hero is-fullheight-with-navbar is-primary\">\n    <div className=\"hero-body-failed\">\n      <div className=\"container\">\n        <p className=\"title is-1 has-text-centered\">Oops, you travelled somewhere unknown!</p>\n      </div>\n    </div>\n  </section>\n)\n\nexport default FailedPage","import React from 'react'\nimport axios from 'axios'\nimport Auth from '../../lib/auth'\nimport { headers } from '../../lib/headers'\n\nclass Login extends React.Component {\n  state = {\n    data: {\n      email: '',\n      password: ''\n    },\n    error: ''\n  }\n\n  handleChange = ({ target: { name, value } }) => {\n    const data = { ...this.state.data, [name]: value }\n    this.setState({ data, error: '' })\n  }\n\n  handleSubmit = async e => {\n    e.preventDefault()\n    try {\n      const res = await axios.post('/api/login', this.state.data, headers)\n      Auth.setToken(res.data.token)\n      this.props.history.push('/')\n    } catch (err) {\n      this.setState({ error: 'Invalid Credentials' })\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <section className=\"hero-body-index\"> \n          <div className=\"logincontainer\">\n            <div className=\"logincolumns\">\n              <form onSubmit={this.handleSubmit} className=\"column\">\n                <h1 className=\"logintitle has-texted-centered\">Login</h1>\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input\n                      className={`input is-large is-primary ${this.state.error ? 'is-dark' : ''}`}\n                      id=\"email\"\n                      name=\"email\"\n                      placeholder=\"Email\"\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                </div>\n                <div className=\"loginfield\">\n                  <br></br>\n                  <div className=\"control\">\n                    <input\n                      className={`input is-large is-primary ${this.state.error ? 'is-danger' : ''}`}\n                      type=\"password\"\n                      id=\"password\"\n                      name=\"password\"\n                      placeholder=\"Password\"\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                  {this.state.error && <small className=\"is-danger\">{this.state.error}</small>}\n                </div>\n                <br></br>\n                <button type=\"submit\" className=\"loginButton\">Login</button>\n              </form>\n            </div>\n          </div>\n        </section>\n      </>\n    )\n  }\n}\n\nexport default Login","import React from 'react'\nimport axios from 'axios'\n// import Select from 'react-select'\n\nclass Register extends React.Component {\n  state = {\n    data: {}\n  }\n\n  //   options = [\n  //     { value: 'Hong Kong', label: 'Hong Kong' },\n  //     { value: 'Beijing', label: 'Beijing' },\n  //     { value: 'London', label: 'London' },\n  //     { value: 'Tokyo', label: 'Tokyo' },\n  //     { value: 'Athens', label: 'Athens' },\n  //     { value: 'New Delhi', label: 'New Delhi' },\n  //     { value: 'Naples', label: 'Naples' },\n  //     { value: 'Osaka', label: 'Osaka' },\n  //     { value: 'Havana', label: 'Havana' },\n  //     { value: 'Mexico City', label: 'Mexico City' },\n  //     { value: 'Marrakech', label: 'Marrakech' }\n  //   ]\n\n  handleChange = e => {\n    const data = { ...this.state.data, [e.target.name]: e.target.value }\n    this.setState({ data })\n  }\n\n  // handleMultiChange = (selected) => {\n  //   const skills = selected ? selected.map(item => item.value) : []\n  //   const data = { ...this.state.data, skills }\n  //   this.setState({ data })\n  // }\n\n  handleSubmit = async e => {\n    e.preventDefault()\n    console.log('submitting', this.state.data)\n    try {\n      await axios.post('/api/register', this.state.data)\n      this.props.history.push('/login')\n    } catch (err) {\n      this.setState({ errors: err.response.data.errors })\n    }\n  }\n\n  render() {\n    return (\n      <section className=\"hero-body-index\">\n        <form onSubmit={this.handleSubmit} className=\"user-container\">\n          <div className=\"registerForm\">\n            {/* <h2 className=\"title\">Register</h2> */}\n            <br />\n            <div className=\"registerContainer\">\n              <div className=\"field\">\n                <label className=\"registerLabel\">First name</label>\n                <div className=\"control\">\n                  <input\n                    className=\"input\"\n                    placeholder=\"Enter your first name\"\n                    id=\"first_name\"\n                    name=\"first_name\"\n                    onChange={this.handleChange}\n                  />\n                </div>\n              </div>\n              <div className=\"field\">\n                <label className=\"registerLabel\">Surname</label>\n                <div className=\"control\">\n                  <input\n                    className=\"input\"\n                    placeholder=\"Enter your surname\"\n                    id=\"second_name\"\n                    name=\"second_name\"\n                    onChange={this.handleChange}\n                  />\n                </div>\n                {/* {this.state.errors.name && <small className=\"help is-danger\">{this.state.errors}</small>} */}\n              </div>\n              <div className=\"field\">\n                <label className=\"registerLabel\">Username</label>\n                <div className=\"control\">\n                  <input\n                    className=\"input\"\n                    placeholder=\"Enter your username\"\n                    id=\"username\"\n                    name=\"username\"\n                    onChange={this.handleChange}\n                  />\n                </div>\n                {/* {this.state.errors.name && <small className=\"help is-danger\">{this.state.errors}</small>} */}\n              </div>\n              <div className=\"field\">\n                <label className=\"registerLabel\">Email</label>\n                <div className=\"control\">\n                  <input\n                    className=\"input\"\n                    placeholder=\"Enter email\"\n                    id=\"email\"\n                    name=\"email\"\n                    onChange={this.handleChange}\n                  />\n                </div>\n                {/* {this.state.errors.email && <small className=\"help is-danger\">{this.state.errors}</small>} */}\n              </div>\n              <div className=\"field\">\n                <label className=\"registerLabel\">Password</label>\n                <div className=\"control\">\n                  <input\n                    className=\"input\"\n                    type=\"password\"\n                    placeholder=\"Enter password\"\n                    id=\"password\"\n                    name=\"password\"\n                    onChange={this.handleChange}\n                  />\n                </div>\n                {/* {this.state.errors.password && <small className=\"help is-danger\">{this.state.errors}</small>} */}\n              </div>\n              <div className=\"field\">\n                <label className=\"registerLabel\">Password Confirmation</label>\n                <div className=\"control\">\n                  <input\n                    className=\"input\"\n                    type=\"password\"\n                    placeholder=\"Re-enter password\"\n                    id=\"password_confirmation\"\n                    name=\"password_confirmation\"\n                    onChange={this.handleChange}\n                  />\n                </div>\n                <br />\n                <button type=\"submit\" className=\"registerButton\">Register now</button>\n                {/* {this.state.errors.passwordConfirmation && <small className=\"help is-danger\">{this.state.errors}</small>} */}\n              </div>\n            </div>\n          </div>\n          {/* <div className=\"user-image\">\n            <ImageUpload\n              handleChange={this.handleChange}\n              fieldName=\"image\"\n              inputClassName=\"my-input-class\"\n            />\n          </div> */}\n          {/* <div className=\"skills-recipes\">\n            <div className=\"fieldContainer\">\n              <div className=\"control\"> */}\n          {/* <Select\n                  options={this.options}\n                  isMulti\n                  onChange={this.handleMultiChange}\n                /> */}\n          {/* </div> */}\n          {/* <div className=\"field\">\n                <label className=\"label\">Cities visited</label>\n                <div className=\"control\">\n                  <input\n                    className=\"input\"\n                    placeholder=\"City\"\n                    name=\"city\"\n                    onChange={this.handleChange}\n                  />\n                </div>\n                {/* {this.state.errors.city && <small className=\"help is-danger\">{this.state.errors.city}</small>} */}\n          {/* </div>  */}\n          {/* </div>\n          </div> */}\n        </form>\n      </section>\n    )\n  }\n}\n\nexport default Register","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport Auth from '../../lib/auth'\n\nconst SecureRoute = ({ component: Component, ...rest }) => {\n  if (Auth.isAuthenticated()) return <Route {...rest} component={Component}/>\n  Auth.logout()\n  return <Redirect to=\"/login\"/>\n}\n\nexport default SecureRoute","import React from 'react'\nimport { Route, BrowserRouter, Switch } from 'react-router-dom'\nimport './styles/main.scss'\nimport 'bulma'\n\nimport Home from './components/common/Home'\nimport CityIndex from './components/cities/CityIndex'\nimport UserProfile from './components/users/UserProfile'\nimport UserEdit from './components/users/UserEdit'\n\nimport Navbar from './components/common/Navbar'\nimport FailedPage from './components/common/FailedPage'\nimport Login from './components/auth/Login'\nimport Register from './components/auth/Register'\nimport SecureRoute from './components/common/SecureRoute'\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <SecureRoute path=\"/profile/:id/edit\" component={UserEdit} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/cities\" component={CityIndex} />\n          <Route path=\"/profile\" component={UserProfile} />\n          <Route path=\"/*\" component={FailedPage} />\n        </Switch>\n      </>\n    </BrowserRouter>\n  );\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}